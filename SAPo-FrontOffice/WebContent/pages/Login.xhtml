<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:fb="http://www.facebook.com/2008/fbml">
<h:head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<h:outputStylesheet library="styles" name="login.css" />
	<title>Index</title>
</h:head>
<h:body background-color="#f1f1f1">
	<script>
		
		window.fbAsyncInit = function() {
			  FB.init({
			    appId      : '594059164067193',
			    cookie     : true,  // enable cookies to allow the server to access 
			                        // the session
			    xfbml      : true,  // parse social plugins on this page
			    version    : 'v2.4' // use version 2.4
			  });
	
	/* 		  FB.getLoginStatus(function(response) {
			    statusChangeCallback(response);
			  }); */
		  };
	
		  // Load the SDK asynchronously
		  (function(d, s, id) {
		    var js, fjs = d.getElementsByTagName(s)[0];
		    if (d.getElementById(id)) return;
		    js = d.createElement(s); js.id = id;
		    js.src = "//connect.facebook.net/en_US/sdk.js";
		    fjs.parentNode.insertBefore(js, fjs);
		  }(document, 'script', 'facebook-jssdk'));
	
		  function checkLoginState() {
			    FB.getLoginStatus(function(response) {
			      statusChangeCallback(response);
			    });
		  }
	
		  function statusChangeCallback(response) {
			    if (response.status === 'connected') {
			      // Logged into your app and Facebook.
			      fetchUserInfo();
			    } else if (response.status === 'not_authorized') {
			      // The person is logged into Facebook, but not your app.
			    } else {
			      // The person is not logged into Facebook, so we're not sure if
			      // they are logged into this app or not.
			    }
		  }
	
		  function fetchUserInfo() {
			    FB.api('/me', function(response) {
			    	fbRemoteCommand([{name: 'fbId', value: response.id}, {name: 'name', value: response.name}]);
			    });
		  }
		  
		</script>
	<h:form>
		<div id="container">
			<div id="header-container">
				<h:outputLabel style="font-size: 36px; color: white;" id="header-title" value="" />
			</div>
			<div id="login-container">
				<div id="email-container">
					<p:inputText style="width:310px; height:45%; margin-top: 15px;" id="email" value="#{sessionBB.email}" />
					<p:watermark for="email" value="Email" />
				</div>
				<div id="password-container">
					<p:password style="width:310px; height:45%; margin-top: 5px;" id="password" value="#{sessionBB.password}" />
					<p:watermark for="password" value="Contraseña" />
				</div>
				<div id="message-container">
					<h:outputText style="color:red;" value="Usuario y/o contraseña incorrectos"
						rendered="#{sessionBB.showError}"></h:outputText>
				</div>
				<div id="sign-in-container">
					<h:commandButton
						style="position: relative; width:315px; height:70%;
	font-size: 18px; margin-top: 5px;"
						value="Ingresar" action="#{sessionBB.loginWithEmail}"></h:commandButton>
				</div>
			</div>
			<p:separator />
			<div id="facebook-container">
				<fb:login-button id="login-facebook-button" size="xlarge"
					scope="public_profile,email" onlogin="checkLoginState();">
					Ingresar con Facebook
					</fb:login-button>
				<p:remoteCommand name="fbRemoteCommand"
					action="#{sessionBB.loginWithFacebook}" />
			</div>
			<p:separator />
			<div id="register-container">
				<h:commandButton
					style="position: relative; margin-top: 20px; margin-bottom: 30px; width:315px; height:50%;
	font-size: 18px;"
					value="Registrarse" action="#{sessionBB.goToRegister}"></h:commandButton>
			</div>
		</div>
	</h:form>
</h:body>
</html>